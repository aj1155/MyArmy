buildscript {
	ext {
		springBootVersion = '1.5.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'war'
apply plugin: 'org.springframework.boot'
apply plugin: 'idea'

jar {
	baseName = 'ma-api'
	version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {


	/* 서블릿 */
	compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'


	/* 빅 데이터 */
	compile('ch.qos.logback:logback-classic:1.2.1'){
		exclude module: 'shared' // 특정 의존성에 대해선만 모듈 제외.
		exclude group: 'groupId', module: 'artifactId'
	}
	//compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.24'
	compile('org.apache.hadoop:hadoop-client')
	compile('org.apache.hadoop:hadoop-common:2.7.2')
	compile('org.apache.hadoop:hadoop-mapred:0.22.0')
	compile group: 'au.com.bytecode', name: 'opencsv', version: '2.4'
	// https://mvnrepository.com/artifact/org.apache.spark/spark-mllib_2.10
	compile group: 'org.apache.spark', name: 'spark-mllib_2.10', version: '1.6.3'

	// https://mvnrepository.com/artifact/org.apache.spark/spark-sql_2.11
	compile group: 'org.apache.spark', name: 'spark-sql_2.10', version: '1.6.3'
	// https://mvnrepository.com/artifact/com.databricks/spark-csv_2.10
	compile group: 'com.databricks',name: 'spark-csv_2.10',version: '1.4.0'
	compile group: 'com.databricks',name: 'spark-xml_2.10',version: '0.4.1'
	compile group: 'org.apache.hadoop', name : 'hadoop-mapreduce-client-core',version: '2.7.3'
	compile group: 'org.apache.hadoop', name : 'hadoop-mapreduce-client-common',version: '2.7.3'
	compile group: 'org.apache.hadoop', name : 'hadoop-mapreduce-client-jobclient',version: '2.7.3'


	compile("org.springframework.boot:spring-boot-starter-batch")
	compile('org.openscience.cdk:cdk-fingerprint:1.5.10')
	compile('org.scala-lang:scala-library:2.10.5')
	compile('org.apache.spark:spark-core_2.10:1.6.3')



	/* boot 서버 설정 */
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')

	/* security */
	compile('org.springframework.boot:spring-boot-starter-security')

	/* jwt */
	compile('io.jsonwebtoken:jjwt:0.6.0')
	
	/* cache */
	compile group: 'net.sf.ehcache', name: 'ehcache', version: '2.10.3'

	/* gson */
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'

	/* mail */
	compile "org.springframework:spring-context-support"
	compile "com.sun.mail:javax.mail"

	// https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf-spring4
	compile group: 'org.thymeleaf', name: 'thymeleaf-spring4', version: '3.0.3.RELEASE'

	/* swagger */
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.4.0'
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.4.0'

	compile("org.springframework.boot:spring-boot-starter-thymeleaf")
	compile("joda-time:joda-time")
	compile("org.jadira.usertype:usertype.jodatime:2.0.1")
	compile("com.google.guava:guava:20.0")
	compile("org.projectlombok:lombok:1.16.2")
	compile("com.google.code.gson:gson:2.8.0")
	compile "org.igniterealtime.smack:smack-core:4.0.4"
	compile "org.igniterealtime.smack:smack-tcp:4.0.4"
	compile "com.googlecode.json-simple:json-simple:1.1"
	compile('eu.bitwalker:UserAgentUtils:1.20')
	compile('org.apache.commons:commons-lang3:3.0')
	runtime('com.h2database:h2:1.4.186')
	runtime('mysql:mysql-connector-java:5.1.35')
	testCompile('org.springframework.boot:spring-boot-starter-test')

	/***
	 *  querydsl dependency
	 */

	def querydslVersion = "4.1.4"

	compile ("com.querydsl:querydsl-core:$querydslVersion")
	compile ("com.querydsl:querydsl-apt:$querydslVersion")
	compile ("com.querydsl:querydsl-jpa:$querydslVersion")
}

[compileJava,compileTestJava]*.options*.encoding = 'UTF-8'

sourceSets{
	generated {
		java { srcDirs = ['src/main/generated/java']}
	}
	main {
		java {
			srcDirs 'src/main/java'
			srcDirs 'src/main/generated/java'
		}
		resources { srcDir 'src/main/resources' }
	}
	test {
		java { srcDir 'src/test/java' }
		resources { srcDir 'src/test/resources' }
	}
}

def queryDslOutput = file("src/main/generated/java")

task generateQueryDSL(type: JavaCompile,group: 'build'){
	doFirst {
		if(!queryDslOutput.exists()){
			logger.info("Creating `$queryDslOutput` directory")

			if(!queryDslOutput.mkdirs()){
				throw new InvalidUserDataException("Unable to Create `$queryDslOutput` directory")
			}
		}else{
			FileCollection collection = files { file(queryDslOutput).listFiles() }
			collection.each { delete it }
		}
	}

	source = sourceSets.main.java
	classpath = configurations.compile
	options.compilerArgs = [
			"-proc:only",
			"-processor",
			"com.querydsl.apt.jpa.JPAAnnotationProcessor"
	]
	destinationDir = queryDslOutput


}

clean {
	delete queryDslOutput
}

compileTestJava.dependsOn(generateQueryDSL)
